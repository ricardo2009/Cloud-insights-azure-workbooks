{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 1,
            "content": {
              "json": "<h1 style=\"color: #003366; background: linear-gradient(90deg,#e6f7ff,#b3c6e6); padding: 20px; border-radius: 12px; text-shadow: 0 2px 8px #000; font-size: 2.5em; letter-spacing: 2px;\">🌌 Azure Futurist Observability Center</h1>\n<p style=\"color:#003366; font-size:1.2em;\">Visão centralizada, interativa e visualmente impactante de toda a sua nuvem Azure. KPIs, status, tendências e insights em tempo real, com navegação intuitiva e legendas explicativas.\n</p>"
            },
            "name": "header-futurist"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"display:flex;align-items:center;justify-content:space-between;background:#e3f2fd;padding:10px 20px;border-radius:10px;margin-bottom:10px;\"><span style=\"font-size:1.1em;color:#003366;\"><b>Bem-vindo ao Futurist Workbook!</b> <span style=\"background:#ffd700;color:#003366;padding:2px 8px;border-radius:6px;font-size:0.9em;\">Novo</span></span><button onclick=\"window.open('https://learn.microsoft.com/azure/azure-monitor/essentials/workbooks-overview','_blank')\" style=\"background:#003366;color:#fff;border:none;padding:6px 16px;border-radius:6px;cursor:pointer;font-size:0.95em;\">Ajuda & Exemplos</button></div>"
            },
            "name": "header-onboarding"
          },
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "sub",
                  "name": "Subscription",
                  "label": "Assinatura",
                  "type": 6,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "value": ["value::all"],
                  "typeSettings": {"additionalResourceOptions": ["value::all"], "includeAll": true}
                },                {
                  "id": "ws",
                  "name": "LogAnalyticsWorkspace",
                  "label": "Workspace",
                  "type": 5,
                  "isRequired": true,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "where type =~ 'microsoft.operationalinsights/workspaces'\r\n| summarize by id, name\r\n| project id",
                  "crossComponentResources": [
                    "value::all"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },
                {
                  "id": "timerange",
                  "name": "timerange",
                  "label": "Período",
                  "type": 4,
                  "value": {"durationMs": 86400000},
                  "typeSettings": {"selectableValues": [{"durationMs": 3600000}, {"durationMs": 86400000}, {"durationMs": 604800000}]}
                },                {
                  "id": "rg",
                  "name": "ResourceGroup",
                  "label": "Resource Group",
                  "type": 2,
                  "isRequired": false,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resourcecontainers | where type == 'microsoft.resources/resourcegroups' | project name",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },                {
                  "id": "FirewallResource",
                  "name": "FirewallResource",
                  "label": "Azure Firewall",
                  "type": 5,
                  "isRequired": false,
                  "multiSelect": false,
                  "query": "resources | where type =~ 'microsoft.network/azurefirewalls' | project id, name | order by name asc",
                  "crossComponentResources": ["{Subscription}"],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "TrafficManagerResource",
                  "name": "TrafficManagerResource",
                  "label": "Traffic Manager",
                  "type": 5,
                  "isRequired": false,
                  "multiSelect": false,
                  "query": "resources | where type =~ 'microsoft.network/trafficmanagerprofiles' | project id, name | order by name asc",
                  "crossComponentResources": ["{Subscription}"],
                  "typeSettings": {
                    "additionalResourceOptions": []
                  },
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources"
                },
                {
                  "id": "region",
                  "name": "Region",
                  "label": "Região",
                  "type": 2,
                  "isRequired": false,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "resources | summarize by location | project location",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },                {
                  "id": "tag",
                  "name": "Tag",
                  "label": "Tag",
                  "type": 2,
                  "isRequired": false,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "mv-expand tags=tags | summarize by tostring(tags) | project Tag=tags",
                  "crossComponentResources": [
                    "{Subscription}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 1,
                  "resourceType": "microsoft.resourcegraph/resources",
                  "value": [
                    "value::all"
                  ]
                },                {
                  "id": "clusterType",
                  "name": "ClusterType",
                  "label": "Tipo de Cluster",
                  "type": 2,
                  "isRequired": false,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "jsonData": "[{\"value\":\"AKS\",\"label\":\"Azure Kubernetes Service (AKS)\"},{\"value\":\"ARO\",\"label\":\"Azure Red Hat OpenShift (ARO)\"}]",
                  "defaultValue": "value::all",
                  "value": [
                    "value::all"
                  ]
                },                {
                  "id": "namespace",
                  "name": "Namespace",
                  "label": "Namespace",
                  "type": 2,
                  "isRequired": false,
                  "multiSelect": true,
                  "quote": "'",
                  "delimiter": ",",
                  "query": "KubePodInventory\n| distinct Namespace\n| order by Namespace asc\n| project Namespace",
                  "crossComponentResources": [
                    "{LogAnalyticsWorkspace}"
                  ],
                  "typeSettings": {
                    "additionalResourceOptions": [
                      "value::all"
                    ],
                    "showDefault": false
                  },
                  "defaultValue": "value::all",
                  "queryType": 0,
                  "resourceType": "microsoft.operationalinsights/workspaces",
                  "value": [
                    "value::all"
                  ]
                }
              ],
              "style": "formVertical",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "name": "parameters-futurist"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"margin:10px 0 20px 0;display:flex;gap:10px;flex-wrap:wrap;\"><span style=\"background:#1976d2;color:#fff;padding:4px 12px;border-radius:8px;font-size:0.95em;\">🔄 Atualização automática ativada</span><span style=\"background:#ffd700;color:#003366;padding:4px 12px;border-radius:8px;font-size:0.95em;\">⚠️ KPIs em tempo real</span><span style=\"background:#d32f2f;color:#fff;padding:4px 12px;border-radius:8px;font-size:0.95em;\">🔥 Alertas críticos</span></div>"
            },
            "name": "badges-status"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"margin-bottom:10px;\"><b>Dica:</b> Passe o mouse sobre os ícones <span style=\"color:#1976d2;font-size:1.2em;\">ℹ️</span> para ver explicações rápidas sobre métricas e gráficos.</div>"
            },
            "name": "tooltip-info"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"background:#fff3cd;color:#856404;padding:10px 16px;border-radius:8px;margin-bottom:10px;display:none;\" id=\"placeholder-heavy-graph\"><b>Carregando visualização avançada...</b> <span style=\"font-size:1.1em;\">⏳</span></div>"
            },
            "name": "placeholder-heavy-graph"
          },
          {
            "type": 1,
            "content": {
              "json": "<div style=\"margin:10px 0;\"><button onclick=\"exportWorkbook('csv')\" style=\"background:#003366;color:#fff;border:none;padding:6px 16px;border-radius:6px;cursor:pointer;font-size:0.95em;\">Exportar CSV</button> <button onclick=\"exportWorkbook('excel')\" style=\"background:#003366;color:#fff;border:none;padding:6px 16px;border-radius:6px;cursor:pointer;font-size:0.95em;\">Exportar Excel</button> <button onclick=\"exportWorkbook('pdf')\" style=\"background:#003366;color:#fff;border:none;padding:6px 16px;border-radius:6px;cursor:pointer;font-size:0.95em;\">Exportar PDF</button></div>"
            },
            "name": "export-buttons"
          },
          {
            "type": 11,
            "content": {
            "version": "LinkItem/1.0",
              "style": "toolbar",
              "links": [                {"cellValue": "TabMain", "linkTarget": "parameter", "linkLabel": "🌐 Visão Geral", "subTarget": "Overview", "style": "link", "icon": "Dashboard"},
                {"cellValue": "TabMain", "linkTarget": "parameter", "linkLabel": "🕸️ Networking", "subTarget": "Networking", "style": "link", "icon": "Connect"},
                {"cellValue": "TabMain", "linkTarget": "parameter", "linkLabel": "🧩 Apps", "subTarget": "Apps", "style": "link", "icon": "WebApp"},
                {"cellValue": "TabMain", "linkTarget": "parameter", "linkLabel": "🗄️ Dados", "subTarget": "Data", "style": "link", "icon": "Database"},
                {"cellValue": "TabMain", "linkTarget": "parameter", "linkLabel": "📦 Containers", "subTarget": "Containers", "style": "link", "icon": "Container"},
                {"cellValue": "TabMain", "linkTarget": "parameter", "linkLabel": "🧠 IA & ML", "subTarget": "AI", "style": "link", "icon": "CognitiveServicesAI"},
                {"cellValue": "TabMain", "linkTarget": "parameter", "linkLabel": "🛡️ Segurança", "subTarget": "Security", "style": "link", "icon": "Lock"},
                {"cellValue": "TabMain", "linkTarget": "parameter", "linkLabel": "🏗️ Infraestrutura", "subTarget": "Infra", "style": "link", "icon": "Columns"}
              ]
            },
            "name": "tabs-futurist"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | summarize total=count(), running=sum(iif(type == 'microsoft.compute/virtualmachines' and properties.extended.instanceView.powerState.displayStatus == 'VM running', 1, 0)), stopped=sum(iif(type == 'microsoft.compute/virtualmachines' and properties.extended.instanceView.powerState.displayStatus != 'VM running', 1, 0)), unhealthy=sum(iif(type == 'microsoft.web/sites' and properties.state != 'Running', 1, 0)) | project total, running, stopped, unhealthy",
                    "size": 1,
                    "title": "Status Global de Recursos",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {"columnMatch": "total", "formatter": 1},
                      "leftContent": {"columnMatch": "running", "formatter": 12, "formatOptions": {"palette": "auto"}},
                      "rightContent": {"columnMatch": "unhealthy", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [ {"operator": ">=", "thresholdValue": "10", "representation": "error", "text": "Ruim"}, {"operator": ">=", "thresholdValue": "3", "representation": "warning", "text": "Atenção"}, {"operator": "Default", "representation": "success", "text": "Excelente"} ] } }
                    },
                    "gridSettings": {"formatters": [{"columnMatch": "unhealthy", "formatter": 0, "numberFormat": {"unit": 1, "options": {"style": "decimal"}}}]},
                    "legend": "<b>Legenda:</b> <span style='color:#ff4c4c'>Ruim</span> ≥ 10 | <span style='color:#ffd700'>Atenção</span> ≥ 3 | <span style='color:#00ff99'>Excelente</span> < 3"
                  },
                  "name": "kpi-global-status"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type =~ 'microsoft.cognitiveservices/accounts' | summarize total=count(), openai=countif(kind =~ 'OpenAI'), cognitive=countif(kind != 'OpenAI'), search=countif(type =~ 'microsoft.search/searchservices'), ml=countif(type =~ 'microsoft.machinelearningservices/workspaces') | project total, openai, cognitive, search, ml",
                    "size": 1,
                    "title": "Recursos de IA & ML",
                    "visualization": "tiles",
                    "tileSettings": {
                      "titleContent": {"columnMatch": "total", "formatter": 1, "formatOptions": {"showIcon": true}},
                      "leftContent": {"columnMatch": "openai", "formatter": 12, "formatOptions": {"palette": "purpleBlue"}, "numberFormat": {"unit": 17, "options": {"style": "decimal", "useGrouping": true}}},
                      "rightContent": {"columnMatch": "ml", "formatter": 12, "formatOptions": {"palette": "greenBlue"}, "numberFormat": {"unit": 17, "options": {"style": "decimal", "useGrouping": true}}},
                      "secondaryContent": {"columnMatch": "cognitive", "formatter": 12, "formatOptions": {"palette": "purple"}, "numberFormat": {"unit": 17, "options": {"style": "decimal", "useGrouping": true}}},
                      "showBorder": true
                    },
                    "mapSettings": {"locInfo": "LatLong"}
                  },
                  "name": "ai-resources-overview"
                },                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"background:#e3f2fd;padding:10px;border-radius:8px;margin-top:10px;\"><b>Legenda dos KPIs:</b><br>Os KPIs exibem o total de recursos, quantidade em execução, parados e não saudáveis. Os status seguem a semântica oficial do Azure Monitor:<br><ul><li><span style='color:#00bfae;font-weight:bold;'>Executando</span>: Recurso operacional</li><li><span style='color:#ffd700;font-weight:bold;'>Parado</span>: Recurso desligado</li><li><span style='color:#ff4c4c;font-weight:bold;'>Não saudável</span>: Recurso com falha ou indisponível</li></ul>Para mais detalhes, consulte a <a href='https://learn.microsoft.com/azure/azure-monitor/essentials/workbooks-monitor-data' target='_blank'>documentação oficial do Azure Monitor</a>.</div>"
                  },
                  "name": "legenda-kpi"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type =~ 'microsoft.cognitiveservices/accounts' | extend SKU = tostring(sku.name), Kind = kind | join kind=leftouter ( resources | where type =~ 'microsoft.machinelearningservices/workspaces' | extend Kind = 'Machine Learning', SKU = tostring(sku.name) ) on Kind | summarize count() by SKU, Kind | order by Kind, SKU",
                    "size": 1,
                    "title": "Distribuição de SKUs de IA por Serviço",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "visualization": "categoricalbar",
                    "chartSettings": {
                      "xAxis": "SKU",
                      "yAxis": ["count_"],
                      "group": "Kind",
                      "createOtherGroup": null
                    },
                    "gridSettings": {"filter": true}
                  },
                  "name": "ai-sku-distribution"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"background:#f3f9ff;padding:10px;border-radius:8px;margin-top:10px;\"><b>🔍 Sabia mais sobre IA na guia principal:</b><br>Acesse a guia <b>🧠 IA & ML</b> para visualizações detalhadas sobre todos os serviços de IA do Azure, incluindo OpenAI, Azure AI Search, ML Services, Visão Computacional e mais. Métricas detalhadas de uso, performance e disponibilidade estão disponíveis para cada serviço.<br><span style=\"color:#1976d2;\">Clique na guia IA & ML para explorar métricas detalhadas de todos os seus serviços de inteligência artificial.</span></div>"
                  },
                  "name": "ai-tab-promo"
                }
              ]
            },
            "conditionalVisibility": {"parameterName": "TabMain", "comparison": "isEqualTo", "value": "Overview"},
            "name": "Overview Futurist"
          },
          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "toolbar",
                    "links": [
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🗺️ Visão Geral", "subTarget": "NetOverview", "style": "link", "icon": "Dashboard"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🌐 Virtual Network", "subTarget": "VNet", "style": "link", "icon": "Network"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🛡️ NSG", "subTarget": "NSG", "style": "link", "icon": "Shield"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "👥 ASG", "subTarget": "ASG", "style": "link", "icon": "Group"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🔀 Load Balancer", "subTarget": "LB", "style": "link", "icon": "Switch"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🌀 Application Gateway", "subTarget": "AppGW", "style": "link", "icon": "Gateway"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🔒 VPN Gateway", "subTarget": "VPNGW", "style": "link", "icon": "VpnGateway"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "⚡ ExpressRoute", "subTarget": "ExpressRoute", "style": "link", "icon": "ExpressRoute"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🔥 Firewall", "subTarget": "FW", "style": "link", "icon": "Firewall"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🚦 Traffic Manager", "subTarget": "TrafficManager", "style": "link", "icon": "TrafficManager"}
                    ]
                  },
                  "name": "submenu-networking"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<h2 style=\"color:#003366\">Networking</h2><p style=\"color:#003366\">Visão detalhada de recursos de rede. Selecione um submenu acima.</p>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "NetOverview"},
                  "name": "net-overview"
                },                {
                  "type": 1,
                  "content": {"json": "<h2 style=\"color:#003366\">Virtual Networks</h2><p style=\"color:#003366\">Visão geral, métricas e status das redes virtuais no Azure.</p>"},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "VNet"},
                  "name": "net-vnet-header"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'microsoft.network/virtualnetworks'\r\n| extend addressSpace = tostring(properties.addressSpace.addressPrefixes[0])\r\n| extend subnets = array_length(properties.subnets)\r\n| extend peerings = array_length(properties.virtualNetworkPeerings)\r\n| project name, resourceGroup, location, addressSpace, ['Subnets']=subnets, ['Peerings']=peerings",
                    "size": 0,
                    "title": "Virtual Networks",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "Subnets", "formatter": 3, "formatOptions": {"palette": "blue", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "Peerings", "formatter": 3, "formatOptions": {"palette": "green", "customColumnWidthSetting": "15ch"}}
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "VNet"},
                  "name": "net-vnets-list"
                },
                {                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.network/virtualnetworks'\r\n| mv-expand subnet=properties.subnets\r\n| extend subnetName = tostring(subnet.name)\r\n| extend prefix = tostring(subnet.properties.addressPrefix)\r\n| extend nsgId = iff(isnotempty(subnet.properties.networkSecurityGroup.id), tostring(subnet.properties.networkSecurityGroup.id), 'Sem NSG')\r\n| extend nsgName = iff(isnotempty(nsgId) and nsgId != 'Sem NSG', split(nsgId, '/')[-1], 'Sem NSG')\r\n| extend delegations = array_length(iff(isnotempty(subnet.properties.delegations), subnet.properties.delegations, dynamic([])))\r\n| project vnetName = name, resourceGroup, subnetName, prefix, cidrSize = split(prefix, '/')[-1], nsgName, subnet_type = iff(subnetName startswith 'AzureBastionSubnet', '🔑 Bastion', iff(subnetName startswith 'GatewaySubnet', '🌐 Gateway', iff(subnetName startswith 'AzureFirewall', '🛡️ Firewall', '🖧 Padrão'))), delegations\r\n| order by tostring(vnetName) asc, tostring(subnetName) asc",
                    "size": 0,
                    "title": "Subnets por Virtual Network",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",                      "gridSettings": {
                      "formatters": [
                        {"columnMatch": "nsgName", "formatter": 13, "formatOptions": {"linkTarget": "Resource", "showIcon": true}},
                        {"columnMatch": "subnet_type", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "contains", "thresholdValue": "Bastion", "representation": "Firewall", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Gateway", "representation": "Globe", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Firewall", "representation": "Shield", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Padrão", "representation": "NetworkInterfaceCard", "text": "{0}"}
                        ]}}
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": ["vnetName"]
                      },
                      "labelSettings": [
                        {"columnId": "vnetName", "label": "Virtual Network"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "subnetName", "label": "Subnet"},
                        {"columnId": "prefix", "label": "Prefix CIDR"},
                        {"columnId": "cidrSize", "label": "Tamanho CIDR"},
                        {"columnId": "nsgName", "label": "NSG Associado"},
                        {"columnId": "subnet_type", "label": "Tipo de Subnet"},
                        {"columnId": "delegations", "label": "Delegações"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "VNet"},
                  "name": "net-vnets-subnets"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.network/virtualnetworks'\r\n| mv-expand peering=properties.virtualNetworkPeerings\r\n| extend peeringName = peering.name\r\n| extend remoteVNet = split(peering.properties.remoteVirtualNetwork.id, '/')[8]\r\n| extend peeringState = peering.properties.peeringState\r\n| extend allowGatewayTransit = peering.properties.allowGatewayTransit\r\n| extend allowForwardedTraffic = peering.properties.allowForwardedTraffic\r\n| project vnetName = name, peeringName, remoteVNet, peeringState, allowGatewayTransit, allowForwardedTraffic\r\n| order by vnetName asc",
                    "size": 0,
                    "title": "Peerings de Virtual Networks",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "peeringState", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Connected", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Disconnected", "representation": "failed", "text": "{0}"},
                          {"operator": "Default", "representation": "pending", "text": "{0}"}
                        ]}},
                        {"columnMatch": "allowGatewayTransit", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "disabled", "text": "Não"}
                        ]}},
                        {"columnMatch": "allowForwardedTraffic", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "disabled", "text": "Não"}
                        ]}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "vnetName", "label": "Virtual Network"},
                        {"columnId": "peeringName", "label": "Nome do Peering"},
                        {"columnId": "remoteVNet", "label": "VNet Remota"},
                        {"columnId": "peeringState", "label": "Estado"},
                        {"columnId": "allowGatewayTransit", "label": "Gateway Transit"},
                        {"columnId": "allowForwardedTraffic", "label": "Tráfego Encaminhado"}
                      ]                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "VNet"},
                  "name": "net-vnets-peerings"
                },
                {
                  "type": 1,
                  "content": {"json": "<b style=\"color:#003366\">Load Balancer</b> - KPIs, status, conexões, health probes, etc."},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                  "name": "net-lb"
                },
                {
                  "type": 1,
                  "content": {"json": "<h2 style=\"color:#003366\">Load Balancers</h2><p style=\"color:#003366\">Monitoramento e análise de Load Balancers, incluindo status, regras, health probes e balanceamento de tráfego.</p>"},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                  "name": "net-lb-header"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.network/loadbalancers'\r\n| extend skuName = tostring(sku.name)\r\n| extend inboundNatRules = array_length(properties.inboundNatRules)\r\n| extend loadBalancingRules = array_length(properties.loadBalancingRules)\r\n| extend probes = array_length(properties.probes)\r\n| extend frontendCount = array_length(properties.frontendIPConfigurations)\r\n| extend backendCount = array_length(properties.backendAddressPools)\r\n| project name, resourceGroup, location, skuName, inboundNatRules, loadBalancingRules, probes, frontendCount, backendCount, id",
                    "size": 0,
                    "title": "Lista de Load Balancers",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "skuName", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Standard", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Basic", "representation": "2", "text": "{0}"}
                        ]}},
                        {"columnMatch": "inboundNatRules", "formatter": 4, "formatOptions": {"palette": "blue", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "loadBalancingRules", "formatter": 4, "formatOptions": {"palette": "purple", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "probes", "formatter": 4, "formatOptions": {"palette": "turquoise", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "frontendCount", "formatter": 4, "formatOptions": {"palette": "lightBlue", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "backendCount", "formatter": 4, "formatOptions": {"palette": "greenBlue", "customColumnWidthSetting": "15ch"}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "name", "label": "Nome"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "location", "label": "Região"},
                        {"columnId": "skuName", "label": "SKU"},
                        {"columnId": "inboundNatRules", "label": "Regras NAT"},
                        {"columnId": "loadBalancingRules", "label": "Regras de Balanceamento"},
                        {"columnId": "probes", "label": "Health Probes"},
                        {"columnId": "frontendCount", "label": "IPs Frontend"},
                        {"columnId": "backendCount", "label": "Pools Backend"},
                        {"columnId": "id", "label": "ID", "isHidden": true}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                  "name": "net-lbs-list"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "LoadBalancerResource",
                        "name": "LoadBalancerResource",
                        "label": "Load Balancer",
                        "type": 5,
                        "isRequired": false,
                        "multiSelect": false,
                        "query": "resources | where type =~ 'microsoft.network/loadbalancers' | project id, name | order by name asc",
                        "crossComponentResources": ["{Subscription}"],
                        "typeSettings": {"additionalResourceOptions": []},
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                  "name": "lb-parameter"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.network/loadbalancers'\r\n| where id == '{LoadBalancerResource}'\r\n| mvexpand rule = properties.loadBalancingRules\r\n| project ruleName = tostring(rule.name), frontendIPConfig = split(tostring(rule.properties.frontendIPConfiguration.id), '/')[-1], frontendPort = toint(rule.properties.frontendPort), backendPort = toint(rule.properties.backendPort), protocol = tostring(rule.properties.protocol), loadDistribution = tostring(rule.properties.loadDistribution), enableFloatingIP = tobool(rule.properties.enableFloatingIP), disableOutboundSnat = tobool(rule.properties.disableOutboundSnat), idleTimeoutMinutes = toint(rule.properties.idleTimeoutInMinutes), probeId = tostring(rule.properties.probe.id)\r\n| extend probeName = split(probeId, '/')[-1]\r\n| project ruleName, protocol, frontendIPConfig, frontendPort, backendPort, loadDistribution, enableFloatingIP, disableOutboundSnat, idleTimeoutMinutes, probeName",
                    "size": 0,
                    "title": "Regras de Balanceamento de Carga",
                    "noDataMessage": "Selecione um Load Balancer para visualizar suas regras",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "protocol", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Tcp", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Udp", "representation": "2", "text": "{0}"}
                        ]}},
                        {"columnMatch": "enableFloatingIP", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "Disabled", "text": "Não"}
                        ]}},
                        {"columnMatch": "disableOutboundSnat", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "Disabled", "text": "Não"}
                        ]}}
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibilities": [
                    {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                    {"parameterName": "LoadBalancerResource", "comparison": "isNotEqualTo", "value": ""}
                  ],
                  "name": "lb-rules"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.network/loadbalancers'\r\n| where id == '{LoadBalancerResource}'\r\n| mvexpand probe = properties.probes\r\n| project probeName = tostring(probe.name), protocol = tostring(probe.properties.protocol), port = toint(probe.properties.port), intervalInSeconds = toint(probe.properties.intervalInSeconds), numberOfProbes = toint(probe.properties.numberOfProbes), requestPath = tostring(probe.properties.requestPath)",
                    "size": 0,
                    "title": "Health Probes",
                    "noDataMessage": "Selecione um Load Balancer para visualizar suas health probes",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "protocol", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Http", "representation": "CognitiveServiceText", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Https", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Tcp", "representation": "2", "text": "{0}"}
                        ]}}
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibilities": [
                    {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                    {"parameterName": "LoadBalancerResource", "comparison": "isNotEqualTo", "value": ""}
                  ],
                  "name": "lb-probes"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<b style=\"color:#003366\">Traffic Manager</b> - KPIs, perfis, endpoints, disponibilidade, etc."},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<h2 style=\"color:#003366\">Traffic Manager</h2><p style=\"color:#003366\">Monitoramento e análise de Traffic Manager, incluindo status, endpoints, disponibilidade e performance.</p>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-header"
                },
                {                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.network/trafficmanagerprofiles'\r\n| extend monitorStatus = tostring(properties.monitoringStatus)\r\n| extend profileStatus = tostring(properties.profileStatus)\r\n| extend dnsttl = toint(properties.dnsConfig.ttl)\r\n| extend routingMethod = tostring(properties.trafficRoutingMethod) \r\n| extend monitorProtocol = tostring(properties.monitorConfig.protocol)\r\n| extend monitorPort = toint(properties.monitorConfig.port)\r\n| extend monitorPath = tostring(properties.monitorConfig.path)\r\n| extend endpointCount = iff(isnotempty(properties.endpoints), array_length(properties.endpoints), 0)\r\n| extend status = case(\r\n    profileStatus =~ 'Enabled' and monitorStatus =~ 'Online', 'Healthy', \r\n    profileStatus =~ 'Enabled' and monitorStatus =~ 'Degraded', 'Degraded',\r\n    profileStatus =~ 'Enabled' and monitorStatus =~ 'CheckingEndpoint', 'Checking',\r\n    profileStatus =~ 'Disabled', 'Disabled',\r\n    'Unknown')\r\n| where id == \"{TrafficManagerResource}\" or isempty(\"{TrafficManagerResource}\")\r\n| project id, name, resourceGroup, location, monitorStatus, profileStatus, dnsttl, routingMethod, monitorProtocol, monitorPort, monitorPath, endpointCount, status\r\n| order by name asc",
                    "size": 0,
                    "title": "Lista de Traffic Manager Profiles",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {                      "formatters": [
                        {"columnMatch": "monitorStatus", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Online", "representation": "success", "text": "✅ {0}"},
                          {"operator": "==", "thresholdValue": "Degraded", "representation": "warning", "text": "⚠️ {0}"},
                          {"operator": "==", "thresholdValue": "CheckingEndpoint", "representation": "pending", "text": "🔄 {0}"},
                          {"operator": "==", "thresholdValue": "Inactive", "representation": "stopped", "text": "⏹️ {0}"}
                        ]}},
                        {"columnMatch": "profileStatus", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Enabled", "representation": "success", "text": "✅ {0}"},
                          {"operator": "==", "thresholdValue": "Disabled", "representation": "disabled", "text": "⏹️ {0}"}
                        ]}},
                        {"columnMatch": "routingMethod", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Performance", "representation": "Speedometer", "text": "⚡ {0}"},
                          {"operator": "==", "thresholdValue": "Priority", "representation": "KnowledgeArticle", "text": "🏆 {0}"},
                          {"operator": "==", "thresholdValue": "Weighted", "representation": "Scale", "text": "⚖️ {0}"},
                          {"operator": "==", "thresholdValue": "Geographic", "representation": "Globe", "text": "🌎 {0}"},
                          {"operator": "==", "thresholdValue": "MultiValue", "representation": "BranchFork", "text": "🔀 {0}"},
                          {"operator": "==", "thresholdValue": "Subnet", "representation": "Network", "text": "🔧 {0}"}
                        ]}},
                        {"columnMatch": "status", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Healthy", "representation": "success", "text": "✅ Saudável"},
                          {"operator": "==", "thresholdValue": "Degraded", "representation": "warning", "text": "⚠️ Degradado"},
                          {"operator": "==", "thresholdValue": "Checking", "representation": "pending", "text": "🔄 Verificando"},
                          {"operator": "==", "thresholdValue": "Disabled", "representation": "disabled", "text": "⏹️ Desativado"},
                          {"operator": "==", "thresholdValue": "Unknown", "representation": "question", "text": "❓ Desconhecido"}
                        ]}},
                        {"columnMatch": "id", "formatter": 13, "formatOptions": {"linkTarget": "Resource", "showIcon": true}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "name", "label": "Nome"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "location", "label": "Região"},
                        {"columnId": "monitorStatus", "label": "Status do Monitor"},
                        {"columnId": "profileStatus", "label": "Status do Perfil"},
                        {"columnId": "dnsttl", "label": "DNS TTL"},
                        {"columnId": "routingMethod", "label": "Método de Roteamento"},
                        {"columnId": "monitorProtocol", "label": "Protocolo Monitor"},
                        {"columnId": "monitorPort", "label": "Porta Monitor"},
                        {"columnId": "monitorPath", "label": "Caminho Monitor"},
                        {"columnId": "endpointCount", "label": "Qtd. Endpoints"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-profiles"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.network/trafficmanagerprofiles'\r\n| where id == \"{TrafficManagerResource}\" or isempty(\"{TrafficManagerResource}\")\r\n| mv-expand endpoint = properties.endpoints\r\n| project profileName = name,\r\n    endpointName = tostring(endpoint.name),\r\n    endpointStatus = tostring(endpoint.properties.endpointStatus),\r\n    weight = toint(iff(isnotempty(endpoint.properties.weight), endpoint.properties.weight, 0)),\r\n    priority = toint(iff(isnotempty(endpoint.properties.priority), endpoint.properties.priority, 0)),\r\n    endpointType = tostring(endpoint.properties.type),\r\n    targetResource = tostring(iff(isnotempty(endpoint.properties.targetResourceId), endpoint.properties.targetResourceId, endpoint.properties.target)),\r\n    endpointLocation = tostring(endpoint.properties.endpointLocation)\r\n| extend status = case(\r\n    endpointStatus =~ 'Online', 'Saudável', \r\n    endpointStatus =~ 'Degraded', 'Degradado', \r\n    endpointStatus =~ 'Offline', 'Indisponível', \r\n    'Desconhecido')\r\n| order by profileName, priority asc",
                    "size": 0,
                    "title": "Lista de Endpoints do Traffic Manager",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {                      "formatters": [
                        {"columnMatch": "endpointStatus", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Online", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Degraded", "representation": "warning", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Offline", "representation": "failed", "text": "{0}"}
                        ]}},
                        {"columnMatch": "status", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "contains", "thresholdValue": "Saudável", "representation": "success", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Degradado", "representation": "warning", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Indisponível", "representation": "failed", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Desconhecido", "representation": "question", "text": "{0}"}
                        ]}},
                        {"columnMatch": "endpointType", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "AzureEndpoint", "representation": "Datacenter", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "ExternalEndpoint", "representation": "Globe", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "NestedEndpoint", "representation": "Folder", "text": "{0}"}
                        ]}},
                        {"columnMatch": "targetResource", "formatter": 13, "formatOptions": {"linkTarget": "Resource", "showIcon": true}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "name", "label": "Nome"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "location", "label": "Região"},
                        {"columnId": "endpointStatus", "label": "Status do Endpoint"},
                        {"columnId": "weight", "label": "Peso"},
                        {"columnId": "priority", "label": "Prioridade"},
                        {"columnId": "endpointType", "label": "Tipo de Endpoint"},
                        {"columnId": "hostName", "label": "Host Name"},
                        {"columnId": "targetResourceId", "label": "ID do Recurso Alvo"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-endpoints"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook175668a0-c2a6-4dd7-b3a4-9d0df52d445c",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/trafficmanagerprofiles",
                    "metricScope": 0,
                    "resourceParameter": "TrafficManagerResource",
                    "resourceIds": ["{TrafficManagerResource}"],
                    "timeContextFromParameter": "timerange",
                    "timeContext": {"durationMs": 86400000},
                    "metrics": [
                      {"namespace": "microsoft.network/trafficmanagerprofiles", "metric": "microsoft.network/trafficmanagerprofiles--QpsByEndpoint", "aggregation": 1}
                    ],
                    "title": "QPS por Endpoint"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-qps"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook175668a0-c2a6-4dd7-b3a4-9d0df52d445c",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/trafficmanagerprofiles",
                    "metricScope": 0,
                    "resourceParameter": "TrafficManagerResource",
                    "resourceIds": ["{TrafficManagerResource}"],
                    "timeContextFromParameter": "timerange",
                    "timeContext": {"durationMs": 86400000},
                    "metrics": [
                      {"namespace": "microsoft.network/trafficmanagerprofiles", "metric": "microsoft.network/trafficmanagerprofiles--EndpointStatusByEndpoint", "aggregation": 3}
                    ],
                    "title": "Status dos Endpoints",
                    "gridSettings": {"rowLimit": 10000}
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-endpoint-status"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook175668a0-c2a6-4dd7-b3a4-9d0df52d445c",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/trafficmanagerprofiles",
                    "metricScope": 0,
                    "resourceParameter": "TrafficManagerResource",
                    "resourceIds": ["{TrafficManagerResource}"],
                    "timeContextFromParameter": "timerange",
                    "timeContext": {"durationMs": 86400000},
                    "metrics": [
                      {"namespace": "microsoft.network/trafficmanagerprofiles", "metric": "microsoft.network/trafficmanagerprofiles--ProbeAgentCurrentEndpointStateByEndpoint", "aggregation": 3}
                    ],
                    "title": "Estado Atual dos Probe Agents",
                    "gridSettings": {"rowLimit": 10000}
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-probe-agent"
                },
                {
                  "type": 1,
                  "content": {"json": "<b style=\"color:#003366\">Application Security Groups</b> - KPIs, associações, regras, etc."},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "ASG"},
                  "name": "net-asg"
                },
                {
                  "type": 1,
                  "content": {"json": "<h2 style=\"color:#003366\">Application Security Groups</h2><p style=\"color:#003366\">Monitoramento e análise de ASGs, incluindo associações de rede, interfaces de rede associadas e regras aplicadas.</p>"},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "ASG"},
                  "name": "net-asg-header"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type == 'microsoft.network/applicationsecuritygroups' | project id, name, resourceGroup, location, properties.resourceGuid | extend asgId = id | order by name asc",
                    "size": 0,
                    "title": "Lista de Application Security Groups",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "name", "label": "Nome"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "location", "label": "Região"},
                        {"columnId": "properties_resourceGuid", "label": "GUID"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "ASG"},
                  "name": "net-asg-list"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type == 'microsoft.network/networkinterfaces' | mvexpand asg = properties.ipConfigurations | where isnotempty(asg.properties.applicationSecurityGroups) | mvexpand asgRef = asg.properties.applicationSecurityGroups | extend asgId = tostring(asgRef.id), nicName = name, nicId = id | project nicName, nicId, asgId | join kind=inner (resources | where type == 'microsoft.network/applicationsecuritygroups' | project asgId = id, asgName = name) on asgId | project nicName, asgName",
                    "size": 0,
                    "title": "Interfaces de Rede Associadas a ASGs",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "gridSettings": {
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "nicName", "label": "Interface de Rede"},
                        {"columnId": "asgName", "label": "Application Security Group"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "ASG"},
                  "name": "net-asg-nics"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources | where type == 'microsoft.network/networksecuritygroups' | mvexpand rule = properties.securityRules | extend ruleName = tostring(rule.name), ruleAccess = tostring(rule.properties.access), rulePriority = toint(rule.properties.priority), ruleDirection = tostring(rule.properties.direction), ruleProtocol = tostring(rule.properties.protocol) | mvexpand asgRef = rule.properties.applicationSecurityGroups | extend asgId = tostring(asgRef.id) | where isnotempty(asgId) | join kind=inner (resources | where type == 'microsoft.network/applicationsecuritygroups' | project asgId = id, asgName = name) on asgId | project nsgName = name, ruleName, ruleAccess, rulePriority, ruleDirection, ruleProtocol, asgName",
                    "size": 0,
                    "title": "Regras NSG Utilizando ASGs",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "ruleAccess", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Allow", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Deny", "representation": "3", "text": "{0}"}
                        ]}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "nsgName", "label": "NSG"},
                        {"columnId": "ruleName", "label": "Regra"},
                        {"columnId": "ruleAccess", "label": "Acesso"},
                        {"columnId": "rulePriority", "label": "Prioridade"},
                        {"columnId": "ruleDirection", "label": "Direção"},
                        {"columnId": "ruleProtocol", "label": "Protocolo"},
                        {"columnId": "asgName", "label": "ASG"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "ASG"},
                  "name": "net-asg-rules"
                },                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {"cellValue": "SubTabInfra", "linkTarget": "parameter", "linkLabel": "💻 Máquinas Virtuais", "subTarget": "VMs", "style": "link"},
                      {"cellValue": "SubTabInfra", "linkTarget": "parameter", "linkLabel": "🔌 Network", "subTarget": "Network", "style": "link"},
                      {"cellValue": "SubTabInfra", "linkTarget": "parameter", "linkLabel": "💾 Storage", "subTarget": "Storage", "style": "link"}
                    ]
                  },
                  "name": "infra-tabs"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<h2 style=\"color:#003366;\">Recursos de Rede na Infraestrutura</h2>\n<p style=\"color:#003366;\">Visão geral de recursos de rede e suas conexões.</p>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabInfra", "comparison": "isEqualTo", "value": "Network"},
                  "name": "infra-network-description"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type in~ ('microsoft.network/virtualnetworks', 'microsoft.network/networksecuritygroups', 'microsoft.network/applicationgateways', 'microsoft.network/loadbalancers', 'microsoft.network/networkinterfaces', 'microsoft.network/publicipaddresses', 'microsoft.network/privateendpoints', 'microsoft.network/vpngateways', 'microsoft.network/expressroutegateways')\r\n| summarize count() by type\r\n| order by count_ desc\r\n| project ['Tipo de Recurso']=case(\r\n    type =~ 'microsoft.network/virtualnetworks', 'Virtual Networks',\r\n    type =~ 'microsoft.network/networksecuritygroups', 'Network Security Groups',\r\n    type =~ 'microsoft.network/applicationgateways', 'Application Gateways',\r\n    type =~ 'microsoft.network/loadbalancers', 'Load Balancers',\r\n    type =~ 'microsoft.network/networkinterfaces', 'Network Interfaces',\r\n    type =~ 'microsoft.network/publicipaddresses', 'Public IP Addresses',\r\n    type =~ 'microsoft.network/privateendpoints', 'Private Endpoints',\r\n    type =~ 'microsoft.network/vpngateways', 'VPN Gateways',\r\n    type =~ 'microsoft.network/expressroutegateways', 'ExpressRoute Gateways',\r\n    type), ['Quantidade']=count_",
                    "size": 0,
                    "title": "Recursos de Rede por Tipo",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {
                          "columnMatch": "Quantidade",
                          "formatter": 4,
                          "formatOptions": {
                            "palette": "blue"
                          }
                        }
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabInfra", "comparison": "isEqualTo", "value": "Network"},
                  "name": "infra-network-resources"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'microsoft.network/virtualnetworks'\r\n| extend addressSpace = tostring(properties.addressSpace.addressPrefixes[0])\r\n| extend subnets = array_length(properties.subnets)\r\n| extend peerings = array_length(properties.virtualNetworkPeerings)\r\n| project name, resourceGroup, location, addressSpace, ['Subnets']=subnets, ['Peerings']=peerings",
                    "size": 0,
                    "title": "Virtual Networks",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "gridSettings": {
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabInfra", "comparison": "isEqualTo", "value": "Network"},
                  "name": "infra-virtual-networks"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"background:#e3f2fd;padding:10px;border-radius:8px;margin-top:10px;\"><b>Legenda:</b><br>As visualizações de rede utilizam métricas e status oficiais do Azure Monitor:<ul><li><span style='color:#1976d2;font-weight:bold;'>Azul</span>: Operacional</li><li><span style='color:#fbc02d;font-weight:bold;'>Amarelo</span>: Atenção</li><li><span style='color:#d32f2f;font-weight:bold;'>Vermelho</span>: Crítico</li><li><span style='color:#616161;font-weight:bold;'>Cinza</span>: Indisponível</li></ul>Distribuições por região/SKU seguem <a href='https://learn.microsoft.com/azure/azure-monitor/essentials/workbooks-monitor-data' target='_blank'>documentação oficial</a>.</div>"
                  },
                  "conditionalVisibility": {"parameterName": "TabMain", "comparison": "isEqualTo", "value": "Infra"},
                  "name": "legenda-infra"
                }
              ]            },
            "conditionalVisibility": {"parameterName": "TabMain", "comparison": "isEqualTo", "value": "Infra"},
            "name": "Infra Futurist"
          },          {
            "type": 12,
            "content": {
              "version": "NotebookGroup/1.0",
              "groupType": "editable",
              "items": [
                {
                  "type": 1,
                  "content": {
                    "json": "<h1 style=\"color: #003366; background: linear-gradient(90deg,#e6f7ff,#b3c6e6); padding: 15px; border-radius: 10px;\">🕸️ Networking</h1>\n<p style=\"color:#003366; font-size:1.1em;\">Monitoramento abrangente de recursos de rede no Azure, incluindo Virtual Networks, Application Gateways, Firewalls e mais.</p>"
                  },
                  "name": "header-networking"
                },
                {
                  "type": 11,
                  "content": {
                    "version": "LinkItem/1.0",
                    "style": "tabs",
                    "links": [
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🌐 Virtual Network", "subTarget": "VNet", "style": "link"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🛡️ Firewall", "subTarget": "Firewall", "style": "link"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🚪 Application Gateway", "subTarget": "AppGW", "style": "link"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "⚖️ Load Balancer", "subTarget": "LoadBalancer", "style": "link"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🔒 NSG", "subTarget": "NSG", "style": "link"},
                      {"cellValue": "SubTabNet", "linkTarget": "parameter", "linkLabel": "🔑 ASG", "subTarget": "ASG", "style": "link"}
                    ]
                  },
                  "name": "submenu-networking"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<h2 style=\"color:#003366\">Networking</h2><p style=\"color:#003366\">Visão detalhada de recursos de rede. Selecione um submenu acima.</p>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "NetOverview"},
                  "name": "net-overview"
                },                {
                  "type": 1,
                  "content": {"json": "<h2 style=\"color:#003366\">Virtual Networks</h2><p style=\"color:#003366\">Visão geral, métricas e status das redes virtuais no Azure.</p>"},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "VNet"},
                  "name": "net-vnet-header"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "Resources\r\n| where type =~ 'microsoft.network/virtualnetworks'\r\n| extend addressSpace = tostring(properties.addressSpace.addressPrefixes[0])\r\n| extend subnets = array_length(properties.subnets)\r\n| extend peerings = array_length(properties.virtualNetworkPeerings)\r\n| project name, resourceGroup, location, addressSpace, ['Subnets']=subnets, ['Peerings']=peerings",
                    "size": 0,
                    "title": "Virtual Networks",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "Subnets", "formatter": 3, "formatOptions": {"palette": "blue", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "Peerings", "formatter": 3, "formatOptions": {"palette": "green", "customColumnWidthSetting": "15ch"}}
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "VNet"},
                  "name": "net-vnets-list"
                },
                {                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.network/virtualnetworks'\r\n| mv-expand subnet=properties.subnets\r\n| extend subnetName = tostring(subnet.name)\r\n| extend prefix = tostring(subnet.properties.addressPrefix)\r\n| extend nsgId = iff(isnotempty(subnet.properties.networkSecurityGroup.id), tostring(subnet.properties.networkSecurityGroup.id), 'Sem NSG')\r\n| extend nsgName = iff(isnotempty(nsgId) and nsgId != 'Sem NSG', split(nsgId, '/')[-1], 'Sem NSG')\r\n| extend delegations = array_length(iff(isnotempty(subnet.properties.delegations), subnet.properties.delegations, dynamic([])))\r\n| project vnetName = name, resourceGroup, subnetName, prefix, cidrSize = split(prefix, '/')[-1], nsgName, subnet_type = iff(subnetName startswith 'AzureBastionSubnet', '🔑 Bastion', iff(subnetName startswith 'GatewaySubnet', '🌐 Gateway', iff(subnetName startswith 'AzureFirewall', '🛡️ Firewall', '🖧 Padrão'))), delegations\r\n| order by tostring(vnetName) asc, tostring(subnetName) asc",
                    "size": 0,
                    "title": "Subnets por Virtual Network",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",                      "gridSettings": {
                      "formatters": [
                        {"columnMatch": "nsgName", "formatter": 13, "formatOptions": {"linkTarget": "Resource", "showIcon": true}},
                        {"columnMatch": "subnet_type", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "contains", "thresholdValue": "Bastion", "representation": "Firewall", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Gateway", "representation": "Globe", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Firewall", "representation": "Shield", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Padrão", "representation": "NetworkInterfaceCard", "text": "{0}"}
                        ]}}
                      ],
                      "filter": true,
                      "hierarchySettings": {
                        "treeType": 1,
                        "groupBy": ["vnetName"]
                      },
                      "labelSettings": [
                        {"columnId": "vnetName", "label": "Virtual Network"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "subnetName", "label": "Subnet"},
                        {"columnId": "prefix", "label": "Prefix CIDR"},
                        {"columnId": "cidrSize", "label": "Tamanho CIDR"},
                        {"columnId": "nsgName", "label": "NSG Associado"},
                        {"columnId": "subnet_type", "label": "Tipo de Subnet"},
                        {"columnId": "delegations", "label": "Delegações"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "VNet"},
                  "name": "net-vnets-subnets"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.network/virtualnetworks'\r\n| mv-expand peering=properties.virtualNetworkPeerings\r\n| extend peeringName = peering.name\r\n| extend remoteVNet = split(peering.properties.remoteVirtualNetwork.id, '/')[8]\r\n| extend peeringState = peering.properties.peeringState\r\n| extend allowGatewayTransit = peering.properties.allowGatewayTransit\r\n| extend allowForwardedTraffic = peering.properties.allowForwardedTraffic\r\n| project vnetName = name, peeringName, remoteVNet, peeringState, allowGatewayTransit, allowForwardedTraffic\r\n| order by vnetName asc",
                    "size": 0,
                    "title": "Peerings de Virtual Networks",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": [
                      "{Subscription}"
                    ],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "peeringState", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Connected", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Disconnected", "representation": "failed", "text": "{0}"},
                          {"operator": "Default", "representation": "pending", "text": "{0}"}
                        ]}},
                        {"columnMatch": "allowGatewayTransit", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "disabled", "text": "Não"}
                        ]}},
                        {"columnMatch": "allowForwardedTraffic", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "disabled", "text": "Não"}
                        ]}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "vnetName", "label": "Virtual Network"},
                        {"columnId": "peeringName", "label": "Nome do Peering"},
                        {"columnId": "remoteVNet", "label": "VNet Remota"},
                        {"columnId": "peeringState", "label": "Estado"},
                        {"columnId": "allowGatewayTransit", "label": "Gateway Transit"},
                        {"columnId": "allowForwardedTraffic", "label": "Tráfego Encaminhado"}
                      ]                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "VNet"},
                  "name": "net-vnets-peerings"
                },
                {
                  "type": 1,
                  "content": {"json": "<b style=\"color:#003366\">Load Balancer</b> - KPIs, status, conexões, health probes, etc."},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                  "name": "net-lb"
                },
                {
                  "type": 1,
                  "content": {"json": "<h2 style=\"color:#003366\">Load Balancers</h2><p style=\"color:#003366\">Monitoramento e análise de Load Balancers, incluindo status, regras, health probes e balanceamento de tráfego.</p>"},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                  "name": "net-lb-header"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.network/loadbalancers'\r\n| extend skuName = tostring(sku.name)\r\n| extend inboundNatRules = array_length(properties.inboundNatRules)\r\n| extend loadBalancingRules = array_length(properties.loadBalancingRules)\r\n| extend probes = array_length(properties.probes)\r\n| extend frontendCount = array_length(properties.frontendIPConfigurations)\r\n| extend backendCount = array_length(properties.backendAddressPools)\r\n| project name, resourceGroup, location, skuName, inboundNatRules, loadBalancingRules, probes, frontendCount, backendCount, id",
                    "size": 0,
                    "title": "Lista de Load Balancers",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "skuName", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Standard", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Basic", "representation": "2", "text": "{0}"}
                        ]}},
                        {"columnMatch": "inboundNatRules", "formatter": 4, "formatOptions": {"palette": "blue", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "loadBalancingRules", "formatter": 4, "formatOptions": {"palette": "purple", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "probes", "formatter": 4, "formatOptions": {"palette": "turquoise", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "frontendCount", "formatter": 4, "formatOptions": {"palette": "lightBlue", "customColumnWidthSetting": "15ch"}},
                        {"columnMatch": "backendCount", "formatter": 4, "formatOptions": {"palette": "greenBlue", "customColumnWidthSetting": "15ch"}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "name", "label": "Nome"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "location", "label": "Região"},
                        {"columnId": "skuName", "label": "SKU"},
                        {"columnId": "inboundNatRules", "label": "Regras NAT"},
                        {"columnId": "loadBalancingRules", "label": "Regras de Balanceamento"},
                        {"columnId": "probes", "label": "Health Probes"},
                        {"columnId": "frontendCount", "label": "IPs Frontend"},
                        {"columnId": "backendCount", "label": "Pools Backend"},
                        {"columnId": "id", "label": "ID", "isHidden": true}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                  "name": "net-lbs-list"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "LoadBalancerResource",
                        "name": "LoadBalancerResource",
                        "label": "Load Balancer",
                        "type": 5,
                        "isRequired": false,
                        "multiSelect": false,
                        "query": "resources | where type =~ 'microsoft.network/loadbalancers' | project id, name | order by name asc",
                        "crossComponentResources": ["{Subscription}"],
                        "typeSettings": {"additionalResourceOptions": []},
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                  "name": "lb-parameter"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.network/loadbalancers'\r\n| where id == '{LoadBalancerResource}'\r\n| mvexpand rule = properties.loadBalancingRules\r\n| project ruleName = tostring(rule.name), frontendIPConfig = split(tostring(rule.properties.frontendIPConfiguration.id), '/')[-1], frontendPort = toint(rule.properties.frontendPort), backendPort = toint(rule.properties.backendPort), protocol = tostring(rule.properties.protocol), loadDistribution = tostring(rule.properties.loadDistribution), enableFloatingIP = tobool(rule.properties.enableFloatingIP), disableOutboundSnat = tobool(rule.properties.disableOutboundSnat), idleTimeoutMinutes = toint(rule.properties.idleTimeoutInMinutes), probeId = tostring(rule.properties.probe.id)\r\n| extend probeName = split(probeId, '/')[-1]\r\n| project ruleName, protocol, frontendIPConfig, frontendPort, backendPort, loadDistribution, enableFloatingIP, disableOutboundSnat, idleTimeoutMinutes, probeName",
                    "size": 0,
                    "title": "Regras de Balanceamento de Carga",
                    "noDataMessage": "Selecione um Load Balancer para visualizar suas regras",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "protocol", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Tcp", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Udp", "representation": "2", "text": "{0}"}
                        ]}},
                        {"columnMatch": "enableFloatingIP", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "Disabled", "text": "Não"}
                        ]}},
                        {"columnMatch": "disableOutboundSnat", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "Disabled", "text": "Não"}
                        ]}}
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibilities": [
                    {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                    {"parameterName": "LoadBalancerResource", "comparison": "isNotEqualTo", "value": ""}
                  ],
                  "name": "lb-rules"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type == 'microsoft.network/loadbalancers'\r\n| where id == '{LoadBalancerResource}'\r\n| mvexpand probe = properties.probes\r\n| project probeName = tostring(probe.name), protocol = tostring(probe.properties.protocol), port = toint(probe.properties.port), intervalInSeconds = toint(probe.properties.intervalInSeconds), numberOfProbes = toint(probe.properties.numberOfProbes), requestPath = tostring(probe.properties.requestPath)",
                    "size": 0,
                    "title": "Health Probes",
                    "noDataMessage": "Selecione um Load Balancer para visualizar suas health probes",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "protocol", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Http", "representation": "CognitiveServiceText", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Https", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Tcp", "representation": "2", "text": "{0}"}
                        ]}}
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibilities": [
                    {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "LoadBalancer"},
                    {"parameterName": "LoadBalancerResource", "comparison": "isNotEqualTo", "value": ""}
                  ],
                  "name": "lb-probes"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<b style=\"color:#003366\">Traffic Manager</b> - KPIs, perfis, endpoints, disponibilidade, etc."},
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<h2 style=\"color:#003366\">Traffic Manager</h2><p style=\"color:#003366\">Monitoramento e análise de Traffic Manager, incluindo status, endpoints, disponibilidade e performance.</p>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-header"
                },
                {                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.network/trafficmanagerprofiles'\r\n| extend monitorStatus = tostring(properties.monitoringStatus)\r\n| extend profileStatus = tostring(properties.profileStatus)\r\n| extend dnsttl = toint(properties.dnsConfig.ttl)\r\n| extend routingMethod = tostring(properties.trafficRoutingMethod) \r\n| extend monitorProtocol = tostring(properties.monitorConfig.protocol)\r\n| extend monitorPort = toint(properties.monitorConfig.port)\r\n| extend monitorPath = tostring(properties.monitorConfig.path)\r\n| extend endpointCount = iff(isnotempty(properties.endpoints), array_length(properties.endpoints), 0)\r\n| extend status = case(\r\n    profileStatus =~ 'Enabled' and monitorStatus =~ 'Online', 'Healthy', \r\n    profileStatus =~ 'Enabled' and monitorStatus =~ 'Degraded', 'Degraded',\r\n    profileStatus =~ 'Enabled' and monitorStatus =~ 'CheckingEndpoint', 'Checking',\r\n    profileStatus =~ 'Disabled', 'Disabled',\r\n    'Unknown')\r\n| where id == \"{TrafficManagerResource}\" or isempty(\"{TrafficManagerResource}\")\r\n| project id, name, resourceGroup, location, monitorStatus, profileStatus, dnsttl, routingMethod, monitorProtocol, monitorPort, monitorPath, endpointCount, status\r\n| order by name asc",
                    "size": 0,
                    "title": "Lista de Traffic Manager Profiles",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {                      "formatters": [
                        {"columnMatch": "monitorStatus", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Online", "representation": "success", "text": "✅ {0}"},
                          {"operator": "==", "thresholdValue": "Degraded", "representation": "warning", "text": "⚠️ {0}"},
                          {"operator": "==", "thresholdValue": "CheckingEndpoint", "representation": "pending", "text": "🔄 {0}"},
                          {"operator": "==", "thresholdValue": "Inactive", "representation": "stopped", "text": "⏹️ {0}"}
                        ]}},
                        {"columnMatch": "profileStatus", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Enabled", "representation": "success", "text": "✅ {0}"},
                          {"operator": "==", "thresholdValue": "Disabled", "representation": "disabled", "text": "⏹️ {0}"}
                        ]}},
                        {"columnMatch": "routingMethod", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Performance", "representation": "Speedometer", "text": "⚡ {0}"},
                          {"operator": "==", "thresholdValue": "Priority", "representation": "KnowledgeArticle", "text": "🏆 {0}"},
                          {"operator": "==", "thresholdValue": "Weighted", "representation": "Scale", "text": "⚖️ {0}"},
                          {"operator": "==", "thresholdValue": "Geographic", "representation": "Globe", "text": "🌎 {0}"},
                          {"operator": "==", "thresholdValue": "MultiValue", "representation": "BranchFork", "text": "🔀 {0}"},
                          {"operator": "==", "thresholdValue": "Subnet", "representation": "Network", "text": "🔧 {0}"}
                        ]}},
                        {"columnMatch": "status", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Healthy", "representation": "success", "text": "✅ Saudável"},
                          {"operator": "==", "thresholdValue": "Degraded", "representation": "warning", "text": "⚠️ Degradado"},
                          {"operator": "==", "thresholdValue": "Checking", "representation": "pending", "text": "🔄 Verificando"},
                          {"operator": "==", "thresholdValue": "Disabled", "representation": "disabled", "text": "⏹️ Desativado"},
                          {"operator": "==", "thresholdValue": "Unknown", "representation": "question", "text": "❓ Desconhecido"}
                        ]}},
                        {"columnMatch": "id", "formatter": 13, "formatOptions": {"linkTarget": "Resource", "showIcon": true}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "name", "label": "Nome"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "location", "label": "Região"},
                        {"columnId": "monitorStatus", "label": "Status do Monitor"},
                        {"columnId": "profileStatus", "label": "Status do Perfil"},
                        {"columnId": "dnsttl", "label": "DNS TTL"},
                        {"columnId": "routingMethod", "label": "Método de Roteamento"},
                        {"columnId": "monitorProtocol", "label": "Protocolo Monitor"},
                        {"columnId": "monitorPort", "label": "Porta Monitor"},
                        {"columnId": "monitorPath", "label": "Caminho Monitor"},
                        {"columnId": "endpointCount", "label": "Qtd. Endpoints"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-profiles"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\r\n| where type =~ 'microsoft.network/trafficmanagerprofiles'\r\n| where id == \"{TrafficManagerResource}\" or isempty(\"{TrafficManagerResource}\")\r\n| mv-expand endpoint = properties.endpoints\r\n| project profileName = name,\r\n    endpointName = tostring(endpoint.name),\r\n    endpointStatus = tostring(endpoint.properties.endpointStatus),\r\n    weight = toint(iff(isnotempty(endpoint.properties.weight), endpoint.properties.weight, 0)),\r\n    priority = toint(iff(isnotempty(endpoint.properties.priority), endpoint.properties.priority, 0)),\r\n    endpointType = tostring(endpoint.properties.type),\r\n    targetResource = tostring(iff(isnotempty(endpoint.properties.targetResourceId), endpoint.properties.targetResourceId, endpoint.properties.target)),\r\n    endpointLocation = tostring(endpoint.properties.endpointLocation)\r\n| extend status = case(\r\n    endpointStatus =~ 'Online', 'Saudável', \r\n    endpointStatus =~ 'Degraded', 'Degradado', \r\n    endpointStatus =~ 'Offline', 'Indisponível', \r\n    'Desconhecido')\r\n| order by profileName, priority asc",
                    "size": 0,
                    "title": "Lista de Endpoints do Traffic Manager",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {                      "formatters": [
                        {"columnMatch": "endpointStatus", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Online", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Degraded", "representation": "warning", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Offline", "representation": "failed", "text": "{0}"}
                        ]}},
                        {"columnMatch": "status", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "contains", "thresholdValue": "Saudável", "representation": "success", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Degradado", "representation": "warning", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Indisponível", "representation": "failed", "text": "{0}"},
                          {"operator": "contains", "thresholdValue": "Desconhecido", "representation": "question", "text": "{0}"}
                        ]}},
                        {"columnMatch": "endpointType", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "AzureEndpoint", "representation": "Datacenter", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "ExternalEndpoint", "representation": "Globe", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "NestedEndpoint", "representation": "Folder", "text": "{0}"}
                        ]}},
                        {"columnMatch": "targetResource", "formatter": 13, "formatOptions": {"linkTarget": "Resource", "showIcon": true}}
                      ],
                      "filter": true,
                      "labelSettings": [
                        {"columnId": "name", "label": "Nome"},
                        {"columnId": "resourceGroup", "label": "Grupo de Recursos"},
                        {"columnId": "location", "label": "Região"},
                        {"columnId": "endpointStatus", "label": "Status do Endpoint"},
                        {"columnId": "weight", "label": "Peso"},
                        {"columnId": "priority", "label": "Prioridade"},
                        {"columnId": "endpointType", "label": "Tipo de Endpoint"},
                        {"columnId": "hostName", "label": "Host Name"},
                        {"columnId": "targetResourceId", "label": "ID do Recurso Alvo"}
                      ]
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-endpoints"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook175668a0-c2a6-4dd7-b3a4-9d0df52d445c",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/trafficmanagerprofiles",
                    "metricScope": 0,
                    "resourceParameter": "TrafficManagerResource",
                    "resourceIds": ["{TrafficManagerResource}"],
                    "timeContextFromParameter": "timerange",
                    "timeContext": {"durationMs": 86400000},
                    "metrics": [
                      {"namespace": "microsoft.network/trafficmanagerprofiles", "metric": "microsoft.network/trafficmanagerprofiles--QpsByEndpoint", "aggregation": 1}
                    ],
                    "title": "QPS por Endpoint"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-qps"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook175668a0-c2a6-4dd7-b3a4-9d0df52d445c",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/trafficmanagerprofiles",
                    "metricScope": 0,
                    "resourceParameter": "TrafficManagerResource",
                    "resourceIds": ["{TrafficManagerResource}"],
                    "timeContextFromParameter": "timerange",
                    "timeContext": {"durationMs": 86400000},
                    "metrics": [
                      {"namespace": "microsoft.network/trafficmanagerprofiles", "metric": "microsoft.network/trafficmanagerprofiles--EndpointStatusByEndpoint", "aggregation": 3}
                    ],
                    "title": "Status dos Endpoints",
                    "gridSettings": {"rowLimit": 10000}
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-endpoint-status"
                },
                {
                  "type": 10,
                  "content": {
                    "chartId": "workbook175668a0-c2a6-4dd7-b3a4-9d0df52d445c",
                    "version": "MetricsItem/2.0",
                    "size": 0,
                    "chartType": 2,
                    "resourceType": "microsoft.network/trafficmanagerprofiles",
                    "metricScope": 0,
                    "resourceParameter": "TrafficManagerResource",
                    "resourceIds": ["{TrafficManagerResource}"],
                    "timeContextFromParameter": "timerange",
                    "timeContext": {"durationMs": 86400000},
                    "metrics": [
                      {"namespace": "microsoft.network/trafficmanagerprofiles", "metric": "microsoft.network/trafficmanagerprofiles--ProbeAgentCurrentEndpointStateByEndpoint", "aggregation": 3}
                    ],
                    "title": "Estado Atual dos Probe Agents",
                    "gridSettings": {"rowLimit": 10000}
                  },
                  "customWidth": "50",
                  "conditionalVisibility": {"parameterName": "SubTabNet", "comparison": "isEqualTo", "value": "TrafficManager"},
                  "name": "net-tm-probe-agent"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<h2 style=\"color:#003366;\">Azure Red Hat OpenShift (ARO)</h2>\n<p style=\"color:#003366;\">Monitoramento detalhado dos clusters ARO, master nodes, worker nodes e outros recursos.</p>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "ARO"},
                  "name": "aro-header"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "aro-cluster",
                        "name": "AROCluster",
                        "label": "ARO Cluster",
                        "type": 5,
                        "isRequired": false,
                        "multiSelect": false,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\n| where type == 'microsoft.redhatopenshift/openshiftclusters'\n| project value = id, label = name\n| order by label asc",
                        "crossComponentResources": ["{Subscription}"],
                        "typeSettings": {"additionalResourceOptions": ["value::1"]},
                        "defaultValue": "value::1",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "ARO"},
                  "name": "aro-parameters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\n| where type == 'microsoft.redhatopenshift/openshiftclusters'\n| extend version = properties.clusterProfile.version\n| extend consoleUrl = properties.consoleProfile.url\n| extend masterCount = toint(properties.masterProfile.count)\n| extend masterVmSize = properties.masterProfile.vmSize\n| extend hasWorkerProfiles = isnotempty(properties.workerProfiles) and array_length(properties.workerProfiles) > 0\n| extend workerCount = iif(hasWorkerProfiles, toint(properties.workerProfiles[0].count), 0)\n| extend workerVmSize = iif(hasWorkerProfiles, tostring(properties.workerProfiles[0].vmSize), 'N/A')\n| extend workerDiskSize = iif(hasWorkerProfiles, toint(properties.workerProfiles[0].diskSizeGB), 0)\n| extend networkVnet = tolower(split(properties.masterProfile.subnetId, '/')[8])\n| extend apiVisibility = properties.apiserverProfile.visibility\n| extend ingressVisibility = properties.ingressProfiles[0].visibility\n| extend provisioningState = properties.provisioningState\n| project name, resourceGroup, location, version, provisioningState, masterCount, masterVmSize, workerCount, workerVmSize, workerDiskSize, networkVnet, apiVisibility, ingressVisibility, consoleUrl",
                    "size": 0,
                    "title": "Azure Red Hat OpenShift Clusters",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "provisioningState", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "Succeeded", "representation": "success", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Creating", "representation": "pending", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Updating", "representation": "2", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Failed", "representation": "4", "text": "{0}"},
                          {"operator": "==", "thresholdValue": "Deleting", "representation": "stopped", "text": "{0}"}
                        ]}},
                        {"columnMatch": "masterCount", "formatter": 4, "formatOptions": {"palette": "blue", "customColumnWidthSetting": "12ch"}},
                        {"columnMatch": "workerCount", "formatter": 4, "formatOptions": {"palette": "redBright", "customColumnWidthSetting": "12ch"}},
                        {"columnMatch": "consoleUrl", "formatter": 7, "formatOptions": {"linkTarget": "Url", "linkLabel": "Abrir Console"}}
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "ARO"},
                  "name": "aro-clusters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\n| where type == 'microsoft.redhatopenshift/openshiftclusters'\n| where id == '{AROCluster}'\n| mvexpand workerPool = properties.workerProfiles\n| project poolName = tostring(workerPool.name), vmSize = tostring(workerPool.vmSize), count = toint(workerPool.count), diskSize = toint(workerPool.diskSizeGB), subnetId = tostring(workerPool.subnetId)\n| extend subnetName = tolower(split(subnetId, '/')[10])\n| order by poolName asc",
                    "size": 0,
                    "title": "Worker Pools",
                    "noDataMessage": "Selecione um cluster ARO para visualizar detalhes",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "count", "formatter": 3, "formatOptions": {"palette": "redBright"}},
                        {"columnMatch": "diskSize", "formatter": 3, "formatOptions": {"palette": "greenRed"}}
                      ],
                      "labelSettings": [
                        {"columnId": "poolName", "label": "Nome do Pool"},
                        {"columnId": "vmSize", "label": "Tamanho VM"},
                        {"columnId": "count", "label": "Contagem"},
                        {"columnId": "diskSize", "label": "Tamanho Disco (GB)"},
                        {"columnId": "subnetName", "label": "Subnet"}
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "ARO"},
                    {"parameterName": "AROCluster", "comparison": "isNotEqualTo", "value": ""}
                  ],
                  "name": "aro-worker-pools"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let clusterName = split('{AROCluster}', '/')[8];\nContainerLog\n| where LogEntry has \"ARO\" or LogEntry has clusterName\n| where LogEntry has_any (\"error\", \"warning\", \"critical\")\n| project TimeGenerated, LogEntry, Computer\n| sort by TimeGenerated desc\n| take 100",
                    "size": 0,
                    "title": "Logs de Erros e Alertas de ARO",
                    "noDataMessage": "Não foram encontrados logs de erro - o cluster pode não ter integração com Log Analytics ou não há erros recentes",
                    "timeContext": {"durationMs": 86400000},
                    "timeContextFromParameter": "timerange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": ["{LogAnalyticsWorkspace}"],
                    "gridSettings": {
                      "filter": true
                    }
                  },
                  "conditionalVisibilities": [
                    {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "ARO"},
                    {"parameterName": "AROCluster", "comparison": "isNotEqualTo", "value": ""}
                  ],
                  "name": "aro-error-logs"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"background:#eff4f9;padding:10px;border-radius:4px;margin:10px 0px\">\n<p><i>⚠️ Nota:</i> Para obter métricas mais detalhadas do ARO, é necessário configurar as integrações de monitoramento específicas para o Red Hat OpenShift. Consulte a <a href='https://docs.microsoft.com/azure/openshift/howto-azure-monitor' target='_blank'>documentação oficial</a> para mais informações.</p>\n</div>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "ARO"},
                  "name": "aro-integration-note"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<h2 style=\"color:#003366;\">Azure Kubernetes Service (AKS)</h2>\n<p style=\"color:#003366;\">Monitoramento detalhado dos clusters AKS, nós master, nós de trabalho e outros recursos.</p>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "AKS"},
                  "name": "aks-header"
                },
                {
                  "type": 9,
                  "content": {
                    "version": "KqlParameterItem/1.0",
                    "parameters": [
                      {
                        "id": "aks-cluster",
                        "name": "AKSCluster",
                        "label": "AKS Cluster",
                        "type": 5,
                        "isRequired": false,
                        "multiSelect": false,
                        "quote": "'",
                        "delimiter": ",",
                        "query": "resources\n| where type == 'microsoft.aks/managedClusters'\n| project value = id, label = name\n| order by label asc",
                        "crossComponentResources": ["{Subscription}"],
                        "typeSettings": {"additionalResourceOptions": ["value::1"]},
                        "defaultValue": "value::1",
                        "queryType": 1,
                        "resourceType": "microsoft.resourcegraph/resources"
                      }
                    ],
                    "style": "formHorizontal",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "AKS"},
                  "name": "aks-parameters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\n| where type == 'microsoft.aks/managedClusters'\n| extend version = properties.kubernetesVersion\n| extend nodeResourceGroup = properties.nodeResourceGroup\n| extend dnsPrefix = properties.dnsPrefix\n| extend agentPoolProfiles = properties.agentPoolProfiles\n| extend networkProfile = properties.networkProfile\n| project name, resourceGroup, location, version, nodeResourceGroup, dnsPrefix, agentPoolProfiles, networkProfile",
                    "size": 0,
                    "title": "Azure Kubernetes Service Clusters",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "agentPoolProfiles", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "has", "thresholdValue": "availabilityZones", "representation": "Globe", "text": "Zonas de Disponibilidade"},
                          {"operator": "has", "thresholdValue": "virtualMachineScaleSets", "representation": "Scale", "text": "VMSS"},
                          {"operator": "has", "thresholdValue": "kubernetes", "representation": "Kubernetes", "text": "K8s"}
                        ]}},
                        {"columnMatch": "networkProfile", "formatter": 18, "formatOptions": {"thresholdsOptions": "icons", "thresholdsGrid": [
                          {"operator": "==", "thresholdValue": "true", "representation": "success", "text": "Sim"},
                          {"operator": "==", "thresholdValue": "false", "representation": "disabled", "text": "Não"}
                        ]}},
                        {"columnMatch": "dnsPrefix", "formatter": 7, "formatOptions": {"linkTarget": "Url", "linkLabel": "Abrir DNS"}}
                      ],
                      "filter": true
                    }
                  },
                  "conditionalVisibility": {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "AKS"},
                  "name": "aks-clusters"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "resources\n| where type == 'microsoft.aks/managedClusters'\n| where id == '{AKSCluster}'\n| mvexpand agentPool = properties.agentPoolProfiles\n| project poolName = tostring(agentPool.name), vmSize = tostring(agentPool.vmSize), count = toint(agentPool.count), diskSize = toint(agentPool.diskSizeGB), subnetId = tostring(agentPool.subnetId)\n| extend subnetName = tolower(split(subnetId, '/')[10])\n| order by poolName asc",
                    "size": 0,
                    "title": "Agent Pools",
                    "noDataMessage": "Selecione um cluster AKS para visualizar detalhes",
                    "queryType": 1,
                    "resourceType": "microsoft.resourcegraph/resources",
                    "crossComponentResources": ["{Subscription}"],
                    "visualization": "table",
                    "gridSettings": {
                      "formatters": [
                        {"columnMatch": "count", "formatter": 3, "formatOptions": {"palette": "redBright"}},
                        {"columnMatch": "diskSize", "formatter": 3, "formatOptions": {"palette": "greenRed"}}
                      ],
                      "labelSettings": [
                        {"columnId": "poolName", "label": "Nome do Pool"},
                        {"columnId": "vmSize", "label": "Tamanho VM"},
                        {"columnId": "count", "label": "Contagem"},
                        {"columnId": "diskSize", "label": "Tamanho Disco (GB)"},
                        {"columnId": "subnetName", "label": "Subnet"}
                      ]
                    }
                  },
                  "conditionalVisibilities": [
                    {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "AKS"},
                    {"parameterName": "AKSCluster", "comparison": "isNotEqualTo", "value": ""}
                  ],
                  "name": "aks-agent-pools"
                },
                {
                  "type": 3,
                  "content": {
                    "version": "KqlItem/1.0",
                    "query": "let clusterName = split('{AKSCluster}', '/')[8];\nContainerLog\n| where LogEntry has \"K8s\" or LogEntry has clusterName\n| where LogEntry has_any (\"error\", \"warning\", \"critical\")\n| project TimeGenerated, LogEntry, Computer\n| sort by TimeGenerated desc\n| take 100",
                    "size": 0,
                    "title": "Logs de Erros e Alertas de AKS",
                    "noDataMessage": "Não foram encontrados logs de erro - o cluster pode não ter integração com Log Analytics ou não há erros recentes",
                    "timeContext": {"durationMs": 86400000},
                    "timeContextFromParameter": "timerange",
                    "queryType": 0,
                    "resourceType": "microsoft.operationalinsights/workspaces",
                    "crossComponentResources": ["{LogAnalyticsWorkspace}"],
                    "gridSettings": {
                      "filter": true
                    }
                  },
                  "conditionalVisibilities": [
                    {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "AKS"},
                    {"parameterName": "AKSCluster", "comparison": "isNotEqualTo", "value": ""}
                  ],
                  "name": "aks-error-logs"
                },
                {
                  "type": 1,
                  "content": {
                    "json": "<div style=\"background:#eff4f9;padding:10px;border-radius:4px;margin:10px 0px\">\n<p><i>⚠️ Nota:</i> Para obter métricas mais detalhadas do AKS, é necessário configurar as integrações de monitoramento específicas para o Azure Kubernetes Service. Consulte a <a href='https://docs.microsoft.com/azure/aks/monitor-aks' target='_blank'>documentação oficial</a> para mais informações.</p>\n</div>"
                  },
                  "conditionalVisibility": {"parameterName": "SubTabContainers", "comparison": "isEqualTo", "value": "AKS"},
                  "name": "aks-integration-note"
                }
          }
        ]
      },
      "name": "Header Futurist"
    }
  ]
}
